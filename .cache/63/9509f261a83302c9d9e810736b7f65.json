{"id":"js/shader/fragment.glsl","dependencies":[{"name":"C:\\Apache24\\htdocs\\THREE-ShaderDistTEXT\\package.json","includedInParent":true,"mtime":1611194073644}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D text;\\nuniform sampler2D displacement;\\nuniform vec4 resolution;\\nvarying vec2 vUv;\\nuniform vec3 mouse;\\nvarying vec3 vPosition;\\nfloat PI = 3.141592653589793238;\\n\\nfloat map(float value, float min1, float max1, float min2, float max2) {\\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\\n}\\n\\nvoid main()\\t{\\n\\n\\t// vec2 direction = normalize(vPosition.xy - mouse.xy);\\n\\tfloat dist = length(vPosition - mouse);\\n\\n\\tfloat prox = 1. - map(dist,0.,0.2,0.,1.);\\n\\n\\tprox = clamp(prox, 0.,1.);\\n\\n\\t// vec2 zoomedUV = vUv + direction*prox*progress;\\n\\n\\tvec2 zoomedUV1 = mix(vUv,mouse.xy + vec2(0.5),prox);\\n\\n\\tvec4 textColor = texture2D(text,zoomedUV1);\\n\\t\\n\\tgl_FragColor = textColor;\\n\\t// gl_FragColor = vec4(prox,prox,prox,1.);\\n\\t// gl_FragColor = vec4(direction,0.,1.);\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shader/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shader/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shader/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":898},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"js/shader/fragment.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D text;\\nuniform sampler2D displacement;\\nuniform vec4 resolution;\\nvarying vec2 vUv;\\nuniform vec3 mouse;\\nvarying vec3 vPosition;\\nfloat PI = 3.141592653589793238;\\n\\nfloat map(float value, float min1, float max1, float min2, float max2) {\\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\\n}\\n\\nvoid main()\\t{\\n\\n\\t// vec2 direction = normalize(vPosition.xy - mouse.xy);\\n\\tfloat dist = length(vPosition - mouse);\\n\\n\\tfloat prox = 1. - map(dist,0.,0.2,0.,1.);\\n\\n\\tprox = clamp(prox, 0.,1.);\\n\\n\\t// vec2 zoomedUV = vUv + direction*prox*progress;\\n\\n\\tvec2 zoomedUV1 = mix(vUv,mouse.xy + vec2(0.5),prox);\\n\\n\\tvec4 textColor = texture2D(text,zoomedUV1);\\n\\t\\n\\tgl_FragColor = textColor;\\n\\t// gl_FragColor = vec4(prox,prox,prox,1.);\\n\\t// gl_FragColor = vec4(direction,0.,1.);\\n}\";"},"lineCount":null}},"error":null,"hash":"6378cb342fb0bfb7e9af9bf3efba7553","cacheData":{"env":{}}}